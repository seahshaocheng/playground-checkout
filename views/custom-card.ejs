<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Adyen Drop-in Demo (Advanced Flow)</title>


  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/js/bootstrap.bundle.min.js"></script>

  <!-- Adyen SDK -->
  <link rel="stylesheet" href="https://checkoutshopper-<%= env %>.adyen.com/checkoutshopper/sdk/<%= sdkVersion %>/adyen.css" />
  <script src="https://checkoutshopper-<%= env %>.adyen.com/checkoutshopper/sdk/<%= sdkVersion %>/adyen.js"></script>

  <script>
    const clientKey = "<%= clientKey %>";
  </script>

  <style>
    .container {
      margin-top: 3rem;
    }

    .form-box {
      background: #ffffff;
      border-radius: 8px;
      padding: 2rem;
      box-shadow: 0 0 20px rgba(0,0,0,0.05);
    }

    #dropin-container {
      background: #fff;
      padding: 1.5rem;
      border-radius: 8px;
      box-shadow: 0 0 20px rgba(0,0,0,0.05);
    }
  </style>
</head>
<body>
  <div class="container">
    <h1 class="text-center">Adyen Drop-in Demo (Advanced Flow)</h1>

    <div class="row">
      <!-- Configuration Form -->
      <div class="col-md-4 order-1 order-md-2 mb-4 mb-md-0">
        <div class="form-box">
          <form id="dropinForm">
            <div class="mb-3">
              <label for="env" class="form-label">Environment</label>
              <select id="env" name="env" class="form-select">
                <option value="test">Test</option>
                <option value="live">Live</option>
              </select>
            </div>

            <div class="mb-3">
              <label for="merchantPrefix" class="form-label">Merchant Prefix (Live only)</label>
              <input type="text" id="merchantPrefix" name="merchantPrefix" class="form-control" placeholder="e.g. yourcompany" />
            </div>

            <div class="mb-3">
              <label for="amount" class="form-label">Amount (in minor units)</label>
              <input type="number" id="amount" name="amount" class="form-control" placeholder="e.g. 1000" value="1000" />
            </div>

            <div class="mb-3">
              <label for="currency" class="form-label">Currency</label>
              <input type="text" id="currency" name="currency" class="form-control" placeholder="e.g. SGD" value="SGD" />
            </div>

            <div class="mb-3">
              <label for="reference" class="form-label">Reference</label>
              <input type="text" id="reference" name="reference" class="form-control" placeholder="e.g. ORDER12345" value="ORDER_ADVANCED_DEMO" />
            </div>

            <button type="submit" class="btn btn-primary w-100">Start Drop-in</button>
          </form>
        </div>
      </div>

      <!-- Custom Card Integration-->
      <div class="col-md-8 order-2 order-md-1">
        <div id="customCard-container">
            <label>
                <span>Card number:</span>
                <span data-cse="encryptedCardNumber"></span>
            </label>
            <label>
                <span>Expiry date:</span>
                <span data-cse="encryptedExpiryDate"></span>
            </label>
            <label>
                <span>CVV/CVC:</span>
                <span data-cse="encryptedSecurityCode"></span>
            </label>
        </div>
      </div>
    </div>
  </div>
  <script>

  
  const { AdyenCheckout, CustomCard} = window.AdyenWeb;  

  const form = document.getElementById("dropinForm");
    function handleOnSubmit(state, component) {
    console.log("Form state", state);
  }

  window.addEventListener("load", async function () {
    const form = document.getElementById("dropinForm");

    const configuration = {
        locale: "en_US",
        environment: "test",
        clientKey: clientKey,
        countryCode:'SG',
        onSubmit: handleOnSubmit
      };

    const checkout = await AdyenCheckout(configuration);

    form.addEventListener("submit", async function (e) {
      e.preventDefault();

      const customCard = new CustomCard(checkout, {
            // Optional configuration
            type: 'card',
            brands: ['mc', 'visa', 'amex', 'bcmc', 'maestro'],
            styles: {
                error: {
                    color: 'red'
                },
                validated: {
                    color: 'green'
                },
                placeholder: {
                    color: '#d8d8d8'
                }
            },
            // Only for Web Components before 4.0.0.
            // For Web Components 4.0.0 and above, configure aria-label attributes in translation files
            ariaLabels: {
                lang: 'en-GB',
                encryptedCardNumber: {
                    label: 'Credit or debit card number field',
                    iframeTitle: 'Iframe for secured card number',
                    error: 'Message that gets read out when the field is in the error state'
                }
            },
            // Events
            onSubmit: function() {},
            onValid : function() {},
            onLoad: function() {},
            onConfigSuccess: function() {},
            onFieldValid : function() {},
            onBrand: function() {},
            onError: function() {},
            onFocus: function() {},
            onBinValue: function(bin) {},
        }).mount('#customCard-container');
    });
  });
  
  </script>
</body>
</html>
